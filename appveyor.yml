version: 1.0.{build}
configuration: Release
image:
- Visual Studio 2022
environment:
  IGNORE_NORMALISATION_GIT_HEAD_MOVE: 1
  GitHubOrganisation: MRCollective
  GitEmail: mrcollective@robdmoore.id.au
  GitName: MRCollective CI
  GitHubToken:
    secure: 56uD+0NAv9a2lH6uupDKkxqQHVsBn/jhAPqI34eX2uNLBUiWMxTpQstbWaKaMPjY
services: mssql2019
branches:
  only:
    - master
  except:
    - gh-pages
skip_branch_with_pr: true
cache:
  - '%LocalAppData%\NuGet\Cache'    # NuGet < v3
  - '%LocalAppData%\NuGet\v3-cache' # NuGet v3
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
#init:
#- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
before_build:
- ps: >-
    & nuget restore

    & GitVersion /output buildserver /updateassemblyinfo

    If (Test-Path ".\PreBuild.ps1") {
    
      Write-Host "Executing PreBuild.ps1"
      & ".\PreBuild.ps1"
    
    } else {
    
      Write-Host "No PreBuild.ps1 found"
    
    }
build:
  parallel: true
  verbosity: minimal
after_build:
- ps: >-
    Get-ChildItem -Recurse *.nuspec | foreach { nuget pack $_.FullName -Properties "Configuration=Release;Platform=AnyCPU" -Symbols -SymbolPackageFormat snupkg -Version $Env:GitVersion_NuGetVersion }

    $currentTag = git tag -l --points-at HEAD

    $HTTP_Request = [System.Net.WebRequest]::Create("https://api.github.com/repos/$env:GitHubOrganisation/$env:APPVEYOR_PROJECT_NAME/releases/tags/$Env:GitVersion_NuGetVersion")
    
    $HTTP_Request.UserAgent = "Powershell"

    try {
    
      $HTTP_Request.GetResponse()
      
    } catch [Net.WebException] { 
    
        [System.Net.HttpWebResponse] $resp = [System.Net.HttpWebResponse] $_.Exception.Response  
        
        if ($currentTag -And $resp.StatusCode -eq 404 -And (-Not $env:APPVEYOR_PULL_REQUEST_TITLE)) {
        
          $env:SHOULD_DEPLOY = 'true'
          
        }
        
    }
    
    if (Test-Path "docfx.json") {
      choco install docfx -y
      & docfx docfx.json
    }
test:
  assemblies:
    only:
      - '**\*.*Tests.dll'
artifacts:
- path: '*.nupkg'
- path: '*.snupkg'
- path: '**\*.vsix'
- path: _site
deploy:
- provider: NuGet
  api_key:
    secure: VHLPzzX6q7AQhNZEkRwpnaX49ADEWyRe16ggQKFJt263041v9fm3TSmoIeDHVrP0
  on:
    SHOULD_DEPLOY: true
after_deploy:
- ps: >-
    npm install github-release-notes -g

    $currentTag = git tag -l --points-at HEAD

    gren release --token=$env:GitHubToken --tags=$currentTag

    if (Test-Path ".\_site") {
      git clone https://github.com/$env:GitHubOrganisation/$env:APPVEYOR_PROJECT_NAME.git -b gh-pages documentation_upload -q
      Copy-Item documentation_upload/.git _site -recurse
      cd _site
      git config user.email $env:GitEmail
      git config user.name $env:GitName
      git config core.autocrlf false
      git config --global credential.helper store
      Add-Content "$HOME\.git-credentials" "https://$($env:GitHubToken):x-oauth-basic@github.com`n" -NoNewline
      $hasEditsToTrackedFilesOrHasUntrackedFiles = !([string]::IsNullOrEmpty($(git status --porcelain)))
      if ($hasEditsToTrackedFilesOrHasUntrackedFiles) {
        git add -A 2>&1
        git commit -m "$Env:GitVersion_NuGetVersion"
        git push origin gh-pages
      }
    }
notifications:
- provider: GitHubPullRequest
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: false
on_finish:
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
